<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oppo.cloud.mapper.TaskDatumMapper">
  <resultMap id="BaseResultMap" type="com.oppo.cloud.model.TaskDatum">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="flow_name" jdbcType="VARCHAR" property="flowName" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="execution_date" jdbcType="TIMESTAMP" property="executionDate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.oppo.cloud.model.TaskDatum">
    <result column="baseline" jdbcType="LONGVARCHAR" property="baseline" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_name, flow_name, task_name, execution_date, create_time
  </sql>
  <sql id="Blob_Column_List">
    baseline
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.oppo.cloud.model.TaskDatumExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task_datum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.oppo.cloud.model.TaskDatumExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task_datum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task_datum
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task_datum
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.oppo.cloud.model.TaskDatumExample">
    delete from task_datum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.oppo.cloud.model.TaskDatum">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task_datum (project_name, flow_name, task_name, 
      execution_date, create_time, baseline
      )
    values (#{projectName,jdbcType=VARCHAR}, #{flowName,jdbcType=VARCHAR}, #{taskName,jdbcType=VARCHAR}, 
      #{executionDate,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{baseline,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.oppo.cloud.model.TaskDatum">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task_datum
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectName != null">
        project_name,
      </if>
      <if test="flowName != null">
        flow_name,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="executionDate != null">
        execution_date,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="baseline != null">
        baseline,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="flowName != null">
        #{flowName,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="executionDate != null">
        #{executionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="baseline != null">
        #{baseline,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.oppo.cloud.model.TaskDatumExample" resultType="java.lang.Long">
    select count(*) from task_datum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task_datum
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectName != null">
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.flowName != null">
        flow_name = #{record.flowName,jdbcType=VARCHAR},
      </if>
      <if test="record.taskName != null">
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.executionDate != null">
        execution_date = #{record.executionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.baseline != null">
        baseline = #{record.baseline,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update task_datum
    set id = #{record.id,jdbcType=INTEGER},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      flow_name = #{record.flowName,jdbcType=VARCHAR},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      execution_date = #{record.executionDate,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      baseline = #{record.baseline,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task_datum
    set id = #{record.id,jdbcType=INTEGER},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      flow_name = #{record.flowName,jdbcType=VARCHAR},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      execution_date = #{record.executionDate,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.oppo.cloud.model.TaskDatum">
    update task_datum
    <set>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="flowName != null">
        flow_name = #{flowName,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="executionDate != null">
        execution_date = #{executionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="baseline != null">
        baseline = #{baseline,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.oppo.cloud.model.TaskDatum">
    update task_datum
    set project_name = #{projectName,jdbcType=VARCHAR},
      flow_name = #{flowName,jdbcType=VARCHAR},
      task_name = #{taskName,jdbcType=VARCHAR},
      execution_date = #{executionDate,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      baseline = #{baseline,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oppo.cloud.model.TaskDatum">
    update task_datum
    set project_name = #{projectName,jdbcType=VARCHAR},
      flow_name = #{flowName,jdbcType=VARCHAR},
      task_name = #{taskName,jdbcType=VARCHAR},
      execution_date = #{executionDate,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>